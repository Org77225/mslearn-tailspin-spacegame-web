trigger:
- '*'

pool:
  name: 'MyWindows'
  demands:
  - npm

variables:
  buildConfiguration: 'Release'
  wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
  dotnetSdkVersion: '3.1.300'

steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core SDK $(dotnetSdkVersion)'
  inputs:
    packageType: sdk
    version: $(dotnetSdkVersion)

- task: Npm@1
  displayName: 'Run npm install'
  inputs:
    verbose: false

- script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
  displayName: 'Compile Sass assets'

# disabling gulp as it cannot seem to be installed correctly in Windows
#- task: gulp@1
#  displayName: 'Run gulp tasks'

- script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
  displayName: 'Write build info'
  workingDirectory: Tailspin.SpaceGame.Web/wwwroot

- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

# the following moved to a template per tutorial https://docs.microsoft.com/en-us/learn/modules/create-a-build-pipeline/8-build-multiple-configurations
# - task: DotNetCoreCLI@2
#   displayName: 'Build the project - Release'
#   inputs:
#     command: 'build'
#     arguments: '--no-restore --configuration Release'
#     projects: '**/*.csproj'

# - task: DotNetCoreCLI@2
#   displayName: 'Publish the project - Release'
#   inputs:
#     command: 'publish'
#     projects: '**/*.csproj'
#     publishWebProjects: false
#   arguments: '--no-build --configuration Release --output $(Build.ArtifactStagingDirectory)/Release'
#   zipAfterPublish: true

- template: templates/build.yml
  parameters:
    buildConfiguration: 'Debug'

- template: templates/build.yml
  parameters:
    buildConfiguration: 'Release'

# template use above

- task: PublishBuildArfacts@1
  displayName: 'Publish Artifact: drop'
  condition: succeeded()